Vokabeln die ich vergesse:
Controllable  Local  Systems (CLS)
Seite 146 technische Richtlinie unglaublich wichtig! bzw kapitel 4.3.1
Mehrfachzugriff (wenn mehrere Teilnehmer auf einen Zeitslot vom DC-net zugreifen)

Top-down methode: die SMGW bilden mit anderen SMGW ein DC-Netz (lokale Gruppen) und schicken verteilt mehrere Teilverbräuche an den Stromanbieter.
Problem: SMGW können nicht miteinander kommunizieren(mögliche Lösung wurde bereits aufgeschrieben und SMGW müssten technisch in der Lage dazu sein mehrere Meterverbräuche zu addieren bzw.
es könnte an dieser Stelle zu neuen implementationsfehler kommen(und zu sicherheitsschwächen führen)

Bottom-up methode: einzelne Meter bilden ein DC-Net und schicken ihre aggregierten Ergebnisse an das SMGW.
Problem: Meter müssen miteinander kommunizieren dürfen.(können aber laut richtlinie nur mit dem SMGW kommunizieren)
könnte mit Diffie-Helmann gelöst werden.
Problem:
Das SMGW MUSS auf  Anforderung  des  SMGW  Administrators Schlüssel  und  Zertifikate für  die  Kommunikation  mit  Zählern  im  LMN  erstellen,  verteilen,  aktivieren, deaktivieren bzw. löschen können.
SMGW könnte jede Kommunikation über Meter mitlesen, aber geht nicht mehr wenn Diffie-Hellmann.
ABER meter haben soweit ich weiß keine IP-Addressen? Wie könnten Sie untereinander kommunizieren?

Notizen für Design:
/////////////////////Top-dowm Approach
Es gibt eine .pdf vom BSI in der Informationen zum Sicherheitsmodul gefunden werden können. Also welche kryptografische Operationen werden unterstützt.

Kommunikation: Ein Smart Meter Gateway beantragt die Kommunikation zum Stromanbieter über den Smart Meter Gateway Admin 

Operationen:
Hier werden alle Möglichen Operationen aufgelistet, die im Protokoll berücksichtigt werden:
-Systeminitialisierung: Wie wird ein mögliches DC-Nets initialisiert in einem bestehenden System?
Lösung: Smart Meter müssen als Clients mit anderen Smart Metern(oder einen Server) kommunizieren. Damit die Inhaltsdaten nicht mitgelesen werden können, muss ein Schlüsselgraph 
erstellt werden, der definiert wie Clients untereinander kommunizieren und ihre Schlüssel addieren oder subtrahieren. Tauschen zwei Clients einen Schlüssel miteinander aus, entsteht eine Kante im Schlüsselgraph wodurch andere Teilnehmer wissen, dass eine Kommunikationsverbindung erstelllt wurde.(bzw wissen überhaupt clients wie der komplette Schlüsselgraph aussieht?)
Der Schlüsselaustausch zwischen zwei Clients spielt dabei eine zentrale Rolle. Für jede gesendete Nachricht muss ein neuer Schlüssel erstellt werden und dann mit der Nachricht verknüpft(Xored) werden.
Damit nicht bei jeder DC-Runde ein neuer Schlüsselaustausch durchgeführt werden muss, werden einmalig Seeds ausgetauscht mit denen jeweils ein PRNG pro Client initialisiert wird. Wenn unter gleichen Bedingungen der PRNG auf beiden Clients initialisiert wird, dann wird jeweils der gleiche Schlüssel erzeugt. Das führt zu einer Reduktion der theoretischen Sicherheit, aber mit guten PRNG kann immernoch
eine komplexitätstheoretische Sicherheit erreicht werden.


-Registrierung: Ein Smart Meter Gateway muss sich bei einem Stromanbieter registrieren und sich beim DC-Netz anmelden. (Wie sieht der Schlüsselgraph aus?) (Wie wird mit anderen Smart Meter Gateways kommuniziert, obwohl dies nicht technisch möglich ist)
-Nutzerwechsel: mehrere private Nutzer können den Stromanbieter wechseln. Wie wird damit umgegangen? stabiles system etc... (wird das vom smart meter gateway oder vom admin ausgelöst?)

Technische Hindernisse:
In der technischen Richtlinie vom BSI wird definiert, welche Anforderungen und mit welchen Rechten Smart Meter kommunizieren dürfen.
Mit der aktuellen Richtlinie ist es Smart Metern nicht erlaubt ins WAN zu kommunizieren außer es handelt sich um eine Kommunikation mit dem SMGW Admin oder Kommunikation an externe Marktteilnehmer. Es ist nicht vorgesehen, dass verschiedene SMGW untereinander kommunizieren.
Dabei führt das BSI auf, dass es die mindestanforderungen sind und dies gibt spielraum für erweiterungen der anwendungsfälle. Da es bereits erlaubt ist mit externen Markteilnehmern zu kommunizieren, kann man diesen Anwendungsfall erweitern indem die Kommunikation mit dem externen Markteilnehmer als Anmeldung für das DC-Netz genutzt wird. (das ist nur möglich, wenn das Anfragende SMGW noch nicht in einem DC-Netz ist)
---> Premisse, man vertraut dem SMGW admin (wie auch bei der arbeit von biselli)
1. Eine mögliche Lösung wäre es, dass ein neuer Teilnehmer, der sich im DC-Netz anmelden möchte eine spezielle Anfrage an seinen Stromanbieter sendet. Diese Anfrage stellt eine Bitte des SMGW dar, sich im 
DC-Netzes anzumelden. Nun werden verschiedene zufällige und bereits angemeldete Clients(SMGW) vom Stromprovider vorgeschlagen(bzw. ein zufälliger client aus einer bereits bestehenden DC-Netz gruppe). Die bereits angemeldeten Clients können sich also nicht aussuchen, welche neue Kommunikationspartner sie bekommen (der Gedanke ist, dass es viele verschiedene kleine DC-Netze gibt, die getrennte Schlüsselgraphen besitzen, jedes DC-Netz sendet seine globale Summe an den Stromanbieter, der alle Werte aufsummiert. Man muss nur darauf achten, dass es eine Mindestanzahl an Teilnehmern pro DC-Netz gibt. Des Weiteren können dadurch auch geographische Gruppen gebildet werden. Also eine bestimmte Gruppe spiegelt den verbrauch einer Stadt wieder und so ist es möglich den Stromverbrauch lokal/geographisch nachzuvollziehen). Diese müssen als authorized external market participants bei den Anfragenden SMGW eingetragen werden, um eine Kommunikation zu erlauben(Diese Eintragung muss der SMGW Admin durchführen. auch hier wäre es sinnvoll, wenn ein bestimmter Befehl zwischen den SMGW definiert wird, um Kenntlich zu machen, dass der SMGW ins DC-Netz eintreten möchte. Einen bestimmter DC-Netz Header würde sich anbieten. Auch authentifikation ist wichtig, weil sonst potentiell malicious smgw in die netze eintreten können. In der hoffnung daten zu klauen. Deshalb sollte ein SMGW admin nur vom Stromprovider des DC-Netzes die Erlaubnis bekommen, das DC-Netz zu erweitern ). Gleichzeitig muss auch der SMGW admin vom zufällig ausgewählten Client den neuen Teilnehmer des DC-Netzes als authorized external market participant eintragen, um eine Kommunikation zu erreichen. Nun kann der neue Teilnehmer mit einem Client, der sich bereits im DC-Netz befindet, kommunizieren. Mittels eine Diffie-Hellman schlüsselaustausch (oder einen anderen Schlüsselaustausch der wahl) können nun die die SChritte der Systeminitialisierung durchgeführt werden. Ein weiterer Vorteil ist, dass bei einer Möglichen Fehlerkorrektur(wie bei Prof. Pfitzmann beschrieben) kleinere DC-Netze durchaus ausfallen könnten, da mehrere DC-Netze auch eine Redundanz darstellen und kleinere Netze vernachlässigbar sind, falls keine korrekten Daten geschickt werden können. Also besteht durchaus ein Interesse, dass man mehrere minimale (minimal im Sinne von kleinst mögliche Gruppe mit höchstmöglicher Anonymität) DC-Netze bildet.

Technische Hindernisse:
In der technischen Richtlinie vom BSI wird definiert, welche Anforderungen und mit welchen Rechten Smart Meter kommunizieren dürfen.
Mit der aktuellen Richtlinie ist es Smart Metern nicht erlaubt ins WAN zu kommunizieren außer es handelt sich um eine Kommunikation mit dem SMGW Admin oder Kommunikation an externe Marktteilnehmer. Es ist nicht vorgesehen, dass verschiedene SMGW untereinander kommunizieren.
Eine mögliche Lösung wäre es, wenn ein Teilnehmer ,der sich im DC-Netz anmelden möchte eine spezielle Anfrage an seinen Stromanbieter sendet. Diese Anfrage stellt eine Bitte des SMGW dar, sich im 
DC-Netzes anzumelden. Nun werden verschiedene zufällige und bereits angemeldete Clients(SMGW) vom Stromprovider vorgeschlagen(bzw. ein zufälliger client aus einer bereits bestehenden DC-Netz gruppe). Die bereits angemeldeten Clients können sich also nicht aussuchen, welche neue Kommunikationspartner sie bekommen (der Gedanke ist, dass es viele verschiedene kleine DC-Netze gibt, die getrennte Schlüsselgraphen besitzen, jedes DC-Netz sendet seine lokale Summe an den Stromanbieter, der alle Werte aufsummiert und die globale Summe bildet (für ein DC-Netz). Man muss nur darauf achten, dass es eine Mindestanzahl an Teilnehmern pro DC-Netz gibt. Des Weiteren können dadurch auch geographische Gruppen gebildet werden. Also eine bestimmte Gruppe spiegelt den verbrauch einer Stadt wieder und so ist es möglich den Stromverbrauch lokal/geographisch nachzuvollziehen). Bei diesem Ansatz muss keine Authentifizierung zwischen dem anfragenden SMGW und dem Stromprovider durchgeführt werden. Denn der Stromprovider ist bereits (von dem SMGW Gateway) verifiziert worden. Das anfragende SMGW muss nun noch die Seeds mit einem (oder mehreren) von den im DC-Netz austauschen. Dafür werden die Nachrichten von dem Anfragenden CLient und dem DC-Netz Client über den Strom provider getunnelt. Vorher werden mit dem Diffie Helmann Schlüsselaustausch Geheimnisse ausgetauscht, damit asymmetrisch verschlüsselte Nachrichten ausgetauscht werden können, ohne das der Stromprovider die Seeds mitlesen kann. Sobald einmal die Seeds ausgetauscht wurden, können alle Teilnehmer im DC-Netz ihre lokale Summen an den Strom provider senden und dieser bildet die globale Summe. Der Stromprovider ist dafür zuständig, dass auch in Zukunft Nachrichten bei Bedarf zu den bereits angemeldeten Client im DC-Netz weitergeleitet wird von dem neuen DC-Mitglied.

Also mittels eines sicheren kanals, der durch den Diffie-Hellman schlüsselaustausch erzeugt wurde, können die Seeds für einen PRNG kommuniziert werden.
-Was passiert wenn ein Teilnehmer entfernt wird? Dann wird eine definierte Nachrichten an den Stromprovider gesendet. Damit teilt das SMGW dem Stromprovider mit, dass es aus dem DC-Netz austreten wird. Dann bereitet der Stromprovider einen Tunnel vor, mit dem es dem austretenden DC-Client möglich ist eine Benachrichtigungsnachricht an seine "Nachbarn" zu senden. Mit dieser Benachrichtigung werden den Nachbarn signalisiert, dass sie ihre PRNG konfigurationen wegwerfen und diese nicht weiter in der Berechnung der lokalen Summe (in der nächsten generation) verwendet werden. Damit es nicht zu einer Störung der Synchronisation kommt, müssen die "Nachbarn" eine Bestätigung(das die Nachricht verstanden wurde) an den Stromprovider senden.
Sollte es dazu kommen, dass der DC-Schlüsselgraph durch den austretenden Client in Teilen zerbricht, dann enstehen daraus mehrere DC-Netze mit der Anforderung, dass die Mindestgröße nicht unterschritten wird. Sollte ein DC-"Nachbar" durch den Austretenden CLient komplett von einem DC-Netz getrennt werden, so muss dieser abgetrennte Client eine besondere NotfallNachricht an den Stromprovider senden und dann wird ein neuer Anmeldevorgang initiiert. 
Annahme: Pro generation darf nur ein SMGW aus dem DC-Netz austreten!
ACHTUNG: Der Stromprovider kennt niemals den Schlüsselgraphen(würde Raum für angriffe bieten). Wenn also ein Graph durch den Austritt eines DC-Clients zerbricht, müssen alle Mitglieder des DC-Netzes ihre aktuelle ID (des DC_Netzes) an den Stromprovider senden, sodass dieser weiß, welche Clients aktuell in einem DC-Netz kommunizieren.
FRAGE: Was passiert, wenn ein Schlüsselgraph in zwei resultierende DC-Netze zerbricht, diese es voneinander aber nicht wissen?
Bzw. was passiert, wenn ein Schlüsselgraph nicht in zwei resultierende DC-Netze zerbricht, aber alle CLient denken, sie wären in dem gleichen DC-netz?


Bei vielen kleinen DC-Netzen (und auch kleinen DC-Gruppen) kann dies zu einer Teilung von einem DC-Netz in zwei führen. Dann senden, die geteilten Netze einzeln ihre lokalen Summe an den Stromanbieter, der diese Summen addiert.(hier muss wieder darauf geachtet werden, dass nicht die minimale Anzahl an Teilnehmern eines DC-Netzes unterschritten wird.

Was tun bei einem Internetausfall -> zu jeder lokalen Summe wird ein Zeitstempel angefügt. Dann können die Nachrichten auch später an den Stromprovider gesendet werden.
Dieser kann dann auch nach einen späteren Zeittick(Generation) die Daten wieder zusammensetzen.

Wichtig! ---> Können viele verschiedene DC-Netze(also mehrere getrennte Schlüsselgraphen) als ein DC-Netz kommunizieren?  (debunked)
Sollen die Meter ein DC-netz bilden und die globale Summe an ein SMGW verteilen? oder sollen die SMGW ein DC-Netz bilden und die globale Summe an den Stromprovider verteilen? --> noch ein wenig effizienter?

Durchführung: Bisher wurden technische Schritte erklärt um ein DC-Netz in das bereits operierende Stromnetz zu implementieren. Wie sieht eine typische Operation im Stromnetz aus?
Am besten wäre es, wenn es eine synchronisierte Uhrzeit gibt in der alle DC-Netze(in einer Region) gleichzeitig senden und überlagern. Aus den DC-Netzen werden mehrere Teil-Stromverbräuche gesendet, die an den Stromanbieter weitergeleitet werden. Der Stromanbieter muss nur alle Teilverbräuche addieren und bekommt somit den Gesamtverbrauch des Stromnetzes. Diese Daten sind komplett anonym und gibt nur die Auskunft über den Gesamtverbrauches eines kleinen DC-Netzes aus. In der Technischen Richtlinie wird auch erwähnt, wie die Zähler Zeit synchronisieren, also ist eine Zeitgleiche sendung von Nachrichten durchaus umsetzbar.

(debunked)Log-Problem:
Laut den technischen Richtlinien müsste die interne Struktur des Logs abgeändert werden. Aktuell gibt es 3 verschiedene Log-Typen Letztverbraucher-Schnittstelle, CLS-Schnittstelle und die Service-Techniker-Schnittstelle. Die Letztverbraucher-Schnittstelle ist hier von interesse. Denn aktuell dürfen nur Letztverbraucher(also Consumer) auf diese Log-Daten mittels eines CLS-Gerätes aus dem HAN darauf zugreifen. Der aktuellste Letztverbraucher-Wert ist von Interesse für das DC-Netz. Deshalb braucht das SMGW zugriff auf diesen Wert um alle Letztverbraucher-werte (von einem Stromprovider) zu aggregieren. 
Damit dann die lokale Summe aus dem aggregierten Wert gebildet werden kann.

AggregierungsProblem:
1. "Aus  bestimmten  Messwerten  ermittelt  das  SMGW  mit  Hilfe  eines  Regelwerks  abgeleitete Messwerte und versendet diese verarbeiteten Werte an berechtigte externe Marktteilnehmer." Diese Messwerte werden in Messwertlisten im SMGW gespeichert. Das SMGW greift auf diese Liste zu und aggregiert alle Werte(von Metern die zum gleichen Stromprovider gehören), sodass die lokale Summe im DC-Netz gebildet werden kann. 
2. Da mehrere SMGW ein DC-Netz bilden, müssen sie sich abstimmen, dass nur ein SMGW die globale Summe an den Stromanbieter sendet. Ansonsten würde es zu Redundanz führen und zu einem falschen Ergebnis beim Stromanbieter.

schau mal nach den Failure handling fällen nach! für sachen die man beachten muss. Sollte im Skript von Pfitzmann beantwortet werden.

Das SMGW muss mindestens diese Anwendungsfälle unterstützen. D.h es können Anwendungsfälle erweitert werden.


-Keine Verbindung zum Netz: Problem z.B Smart Meter kann seine aktuellen Verbräuche nicht an das DC-Nets schicken, weil ein Stromausfall vorherrscht oder keine Internetverbindung vorliegt.
-Was bei missbrauch, falscher Verbrauchsübermittlung 
oder Boykottierung des Netzes, sodass ein Falscher Zustand vermittelt wird?

-Grundzustand: Es ist davon auszugehen, dass es bereits mehrere Smart Meter Gateways gibt, die in einem bestehenden Grid operieren.

Problem: Ein Smart Meter Gateway kümmert sich um die Meter Daten, aber wie verhält sich das Smart Meter Gateway, wenn unterschiedliche Meter bei unterschiedlichen Anbietern sind? und ein Anbieter z.B nicht im DC-Netz operiert. etc.
-Mögliche Lösung: Zeitslots/Zeitraum. Jeder Anbieter bekommt einen Zeitslot/Zeitraum bei dem gesendet wird. Anbieter mit DC-Netzen können Zeitslots sperren, sodass es nicht zu einer "falschen(bad)" Überlagerung kommt.

Abbildung 26 technische Richtlinie:
Die Abbildung zeigt ein Diagramm wie die Messwerte intern im SMGW verarbeitet werden. Da das SMGW eine zentrale Rolle in der Lösung spielt, ist dieses Diagramm wichtig um die technischen Details zu illustrieren. Zunächst muss erwähnt werden, dass gewisse terminologische Anforderungen durch die technische Richtlinie gestellt werden. "Das  SMGW MUSS mindestens  folgende  Informationen  an  der  Schnittstelle  für  Anzeigeeinheiten bereitstellen....
Dabei müssen Verbrauchs-sowie Einspeisewerte für die folgenden Zeiträume bereitgestellt werden:die letzten 7 Tage, Tag für Tag ,die letzte Woche (aggregiert)."
Deshalb sollten die lokale Summe erst nach der Messwertverarbeitung bzw. dem Schritt "Messwerte neuer Messgrößen" gebildet werden. Dabei ist zu beachten, dass es möglicherweise zu einer Einschränkung der Konfiguration der Auswertungsprofile bzw. Kommunikationsprofile führen kann. Das sollte jedoch zu keinen größeren Problemen führen(da durch das DC-netz sicherlich einige Regeln "nicht mehr möglich" sind, aber trotzdem ein Großteil aller Funktionen durchführbar sind). Mit diesem Ansatz kann ein DC-Netz implementiert werden, ohne großartig die interne Struktur des SMGW zu ändern.


Vllt noch schreiben, ob dadurch Ereignisse wie eichtechnische Logeinträge erschwert werden, durch die Anonymität?
Antwort nein, da die Operationen des DC-Netz innerhalb der Funktionalität des SMGW erst so spät durchgeführt werden. Deshalb wurden die wichtigen Operationen wie Messwertverarbeitung und logbuch einträge bereits ausgeführt.

Fehlertoleranz:
vllt sowas wie der Kollisionsauflösungsalgorithmus mit Mittelwertbildung(also das es ein Bit für die Anzahl der Nachrichten gibt) um zu sehen wie viele Stationen senden konnten.(damit kann man sehen, ob es zu einem großflächigen stromausfall gekommen ist etc.)
---> Der Gedanke ist, dass ein DC-Netz,dass sich im Fehler modi befindet nur Leernachrichten sendet und das Nachrichtenbit nicht erhöht. So kann der Stromprovider abschätzen, wie viele DC-netze ausgefallen sind(Gesamtanzahl DC-Netze minus Anzahl Gesendeter DC_netze)

Die Fehlertoleranz im DC-Netz bezieht sich größtenteils auf die Erkenntnisse von Prof. Pfitzmann.
Damit ein DC-Netz arbeiten kann, müssen mehrere Anforderungen erreicht werden:
Bei dem DC-Netz müssen alle Schlüssel fehlerfrei ausgetauscht worden sein.( Es wurde bereits beschrieben wie der Schlüsselaustausch stattfindet) Die PNRG müssen synchron sein, damit die erzeugten Schlüssel gleich sind. Ein Fehler/fehlsynchronisation führt dazu, dass keine Teilnehmerstation senden kann. Erst wenn der fehler korrigiert wurde, ist ein Senden wieder möglich. (es sei denn es gibt redundanzen). Ziel dieser Arbeit ist, dass man möglichst kleine DC-Netze bildet, die trotzdem ein größtmögliches level an anonymität garantieren(nochmal nachfragen ob das stimmt.) 

Warum kleine DC-Netze?
DC-Netze sind besonders praktisch, wenn es um die Überlagerung von Nachrichten bzw. den Stromverbräuchen geht. Aber bereits bei einen Fehler von einem Verbraucher(wie z.B internetausfall) ist es niemanden im Netz mehr möglich sinnvoll zu Überlagern. Um eine möglichst hohe Verfügbarkeit zu erreichen, bietet es sich an mehrere minimal von einander getrennte DC-netze zu betreiben. Wenn es in einem kleinen DC-Netz zu einem Ausfall kommt kann ein Protokoll gestartet werden um den Fehler zu entdecken. Durch die Minimalität des DC-Netzes kann ein Ausfall von einem oder mehreren Netzen vernachlässigt werden. (da z-B. in großen städten es nicht auffällt, wenn eine Prozentual geringe menge nicht senden kann). Gleichzeitig können die Menge aller Sender aufaddiert werden (wie bei der mittelwertbildung). Damit weiß der Stromprovider wie viele sender es gibt und kann einschätzen wie Vertrauenswürdig die gelieferten Daten sind.

Warum kein senderpartitioniertes DC-Netz?
Aufwand soll nicht groß sein, aber die Senderanonymität wird verringert und es ist deshalb in dieser Arbeit nicht sinnvoll, da man durch die minimalen Netze nicht noch zusätzlich an anonymität einbüßen möchte. ABER es wird eine "vollständige Fehlerüberdeckung erreicht".

Pfitzmann Protokoll:
Transiente(also vorrübergehend) und permanente Fehler:
Die transienten Fehler im DC-Netz werden durch Ende-zu-Ende-Protokolle toleriert.
Permanente Fehler entstehen durch Desynchronisation (z.B durch PRNG)
Laut pfitzmann können fehler leicht behoben werden. Die Hauptarbeit liegt also in der Fehlererkennung und Fehlerlokalisierung.

Mögliche permanente Fehler:
Ausfall von PRNG -> neuverteilung der schlüssel bzw. seeds
Ausfall von modulo addierer -> austausch von addierern

Hauptproblem Fehlererkennung:

DC-Netze werden auf der Schicht 1 und Schicht 2 implementiert.

Fehler in der oberen Schicht 1 lassen sich durch Redundanzen wie CRC lösen, die am Ende einer Nachricht angefügt werden können.
Sollte es bei z.B. CRC zu einem ungültigen Prüfzeichen kommen, so liegt ein Fehler bei der Überlagerung vor.

Fehler bei Mehrfachzugriffsverfahren:
Man arbeitet mit zwei "Modi" eine normalen A-Modi und einen Fehlermodi F-modi in dem nach Fehlern gesucht wird.
Bei Fehler wird das Mehrfachzugriffsverfahren neuinitialisiert um mögliche transiente Fehler und Fehler in der oberen Schicht 1 auszuschließen.
Sollten trotzdem noch Fehler vorherrschen (oder es wurde ein anderer permanenter Fehler gefunden) wird in den F-modi umgeschaltet. Nun wird folgendes Protokoll umgesetzt.
Protokoll:
1. Jede Station erstellt einen recovery point und speichert die aktuell ausgetauschten schlüssel.
2. Nun wird eine selbstdiagnose ausgeführt. Es werden paarweise zufällige Schlüssel in den PRNG geladen und mit einer zufälligen Nachricht lokal überlagert. Sollte das Ergebnis nicht die zufällige Nachricht sein, so ist die Station fehlerhaft. Dies wird den anderen Stationen mitgeteilt. Die Schlüssel der fehlerhafte Station werden nun verworfen und es wird in den A-modus gewechselt.
ODER: Die station ist fehlerfrei so wird der recovery point wiederhergestellt.
Von hier aus gibt es 3 Fehlertypen, die auftreten könnten:
1. Eine Station, die so fehlerhaft ist, dass sie wieder ihren Fehler dem Netz mitteilen kann, noch kommunizieren kann.
2. Schlüssel/Synchronisationen von mind. 2 Stationen gingen verloren.
3. Das unterliegende Kommunikationsnetz, Globale überlagerung ist Fehlerhaft.

Um den Fehler genauer zu lokalisieren, werden die Schlüsselpaare Schritt für schritt halbiert(man startet bei der hälfte) und es werden leerbotschaften gesendet. 
Ist das ergebnis jedes mal 0 liegt der Fehler mit sehr hoher wahrscheinlichkeit in der anderen hälfte. Ein stuck at zero fault muss auch ausgeschlossen werden.

ODER das ergebnis ist nicht jedes mal 0. Dann befindet sich der Fehler in dieser hälfte und es wird weiter halbiert um den Fehler genauer zu lokalisieren.

Wenn der Schlüsselgraph nur noch eine Kante besitzt und weiterhin nach 100 Tests nicht nur Nullen gesendet werden, dann Tauschen die beiden Letzten Stationen neue Schlüssel aus bzw. einen neuen PRNG-Startwert. Damit kann man Schlüsselsynchronisationsfehler erkennen.

Sollte wiederum immer noch keine korrekten Nachrichten übermittelt werden zwischen den zwei Stationen, dann werden die eben ausgetauschten schlüssel verworfen und es werden neue Schlüssel bzw. PRNG-Startwert mit einer dritten und vierten Station ausgetauscht. Dann wird der Test wiederholt. Sollte der Test weiterhin fehlerhaft ausfallen, so ist mit hoher Wahrscheinlichkeit das zugrundeliegende Kommunikationsnetz oder die globale Überlagerung fehlerhaft.

ODER beim zugrundeliegenden Test ist nur ein Test fehlerhaft. Dann ist die ursprüngliche verdächtige Station als fehlerhaft angesehen und aus dem betriebgenommen(aus dem Schlüsselgraphen entfernt).
Dann kann wieder in den A-Modus geschaltet werden und das Mehrfachzugriffsverfahren wird neu initialisiert.

Eigenschaften:

1. Anonymität:
Durch die Nutzung von PRNG sinkt die Anonymität von informationstheoretisch sicheren zu einer komplexitätstheoretisch sicheren Anonymität. Trotzdem
Auch wenn ein SMGW von einem Angreifer kontrolliert werden sollte, dann wäre es nicht dem Angreifer möglich den Stromverbrauch von anderen SMGW mitzulesen. Nur in spezialfällen wäre es möglich, dass ein kontrolliertes SMGW ein weiteres SMGW abhören kann(bzw. mehrere und zwar genau dann, wenn der Angreifer der Parent von Leafs ist), aber dann hätte der Angreifer nur die aggregierten Messwerte aller Meter, die das abgehörte SMGW betreut. Des Weiteren ist es durch die Technische Richtlinie nicht möglich, dass SMGW Admins einzelne Meterdaten anfordern/lesen können. Dadurch müssen potentiell kontrollierte SMGW nicht betrachtet werden. Außerdem gilt es in dieser Arbeit herauszufinden, wie minimal DC-Netze sein können, um eine größtmögliche Anonymität mit der höchstmöglichen Verfügbarkeit zu erreichen.

2. Authentikation: 
Ein Smart meter muss nicht authentifiziert werden durch das DC-Netz. Die Operationen, die im DC-Netz stattfinden, werden erst spät bei der Messwertverarbeitung ausgeführt. Bis zu diesem Zeitpunkt wurden die Messwerte und die Meter bereits authentifiziert. Sollten bei der Authentifizierung probleme auftreten, so könnten diese wie bei SMGW ohne DC-Netz ins eichtechnische Logbuch bzw. ins Systemlogbuch eingetragen werden. Ansosten ist der Eintritt in d das DC-Netz ein kritischer Punkt. Man möchte vermeiden, dass potentielle Angreifer(mit fake SMGW) in das Netz eintreten um Daten klauen zu können. Deshalb muss zwischen dem Strom provider und dem SMGW eine klare Authentifizierung stattfinden, die nur bei Erfolg ein SMGW in das DC-Netz aufnimmt.

3. Verfügbarkeit:
Es ist mit einer sehr hohen Verfügbarkeit mit DC-Netzen zu rechnen. Trotzdem müssen einige Vorkehrungen getroffen werden, um eine hohe Verfügbarkeit zu gewährleisten. Es wurde bereits erwähnt, dass es zu transienten als auch permanenten Fehlern kommen kann. Treten diese Fehler auf, so ist es keinem Benutzer im DC-Netz möglich Nachrichten zu überlagern. Die Lösung hierfür ist, dass man mit mehreren voneinander getrennten DC-Netzen arbeitet. Sollte es zu einem Fehler in einem DC-Netz kommen, kann das DC-Netz vernachlässigt werden, da Fehler in kleinen DC-Netzen nicht so stark ins Gewicht fallen, als Fehler in wenigen großen DC-Netzen. Des Weiteren sollte ein Fehler bemerkt werden, so wurde ein Fehlerprotokoll beschrieben(Von Prof. Pfitzmann) welches die schwerwiegensten Fehler tolerieren kann und das System wieder in einen geordneten Zustand bringen kann. Sollte auch diese Möglichkeit versagen, so müsste ein techniker das Problem beheben. Nichtsdestotrotz könnte ein genaues Bild des Stromnetzes(welches Wort) auch wenn mehrere DC-Netze aktuell nicht senden können. 

4. Skalierbarkeit und Effizienz:
Die hier vorgeschlagene Struktur ist stark skalierbar, da neue Nutzer entweder zu bereits bestehenden DC-Netzen hinzugefügt werden oder selbst ein neues DC-Netz erstellen können. Da die größe von den DC-Netzen klein ist und alle Nutzer gleichzeitig überlagern (also zum gleichen Zeitpunkt senden) kommt es nicht zu einer Überlastung bzw. Bottleneck. 
Außerdem ist davon auszugehen, dass die Bildung der globalen Summe (also eine Runde im DC-Netz) effizient durchführbar ist. Denn abgesehen von der Schlüsselbildung werden im DC-Netz hauptsächlich Additionen mit Modulo durchgeführt, die leicht umsetzbar sind. Des Weiteren sollte es zu Fehlern kommen, können die im Protokoll vorgeschlagenen Fehlerkorrekturmaßnahmen schnell umgesetzt werden. Nur wenn es zu einem unwahrscheinlichen durch das Protokoll unlösbaren Fehler kommt, müssen Servicetechniker vor Ort den Fehler beheben. Der Strom provider bekommt von mehreren Hundert SMGW die aggregierten Stromverbräuche, die müssen dann nochmals addiert werden, aber das sollte ebenfalls zu keinen Performanceverlusten führen.


Siehe seite 253-255 im Skript

Wie umgehen mit Bit overflows also wenn addiert wird von 9+2 auf 11?


Zeitstempel für jede Nachricht mitsenden, falls internetausfall vorhanden ist.

Zeitsynchronisation:
siehe 3.2.6
//////////////////////////////// Bottom-Up Approach
-Systeminitialisierung: Wie wird ein mögliches DC-Nets initialisiert in einem bestehenden System?
Lösung: bei dem Bottom-up Approach kommunizieren mehrere Meter über ein DC-Netz im LMN.  
Warum ist es nicht möglich?
Terminologie:
MUSS bedeutet, dass es sich um eine normative Anforderung handelt.
DARF NICHT / DARF KEIN bezeichnet den normativen Ausschluss einer Eigenschaft.
SOLL  NICHT  / SOLL  KEIN kennzeichnet  die  dringende  Empfehlung,  eine  Eigenschaft auszuschließen. Abweichungen zu diesen Festlegungen müssen begründet werden. 
KANN / DARF bedeutet, dass die Eigenschaften fakultativ oder optional sind.

"Das SMGW MUSS zu jedem angeschlossenen Zähler aktuelle Zählerstände der relevanten gemessenen Messgrößen vorhalten. Der SMGW-Admin MUSS dazu konfigurieren können, welche Messgrößen  des  Zählers  relevant  sind  und  in  Form  von  aktuellen  Zählerständen  im  SMGW  abgebildet werden müssen"

Siehe Seite 146 technische Richtlinie. 
Laut dem aktuellen Konzept der Datenverarbeitung wäre es gar nicht möglich dem Endnutzer die Verbrauchsdaten mitzuteilen. Mit dem Bottom-up Approach ist es dem SMGW gar nicht möglich zu erkennen, von welchem Meter Verbrauchsdaten gesendet werden, da das DC-Netz Senderanonymität garantiert. Dementsprechend würden fast alle Anwendungsfälle im HAN nicht umsetzbar sein und eine Reihe von MUSS Anforderungen können nicht mehr garantiert werden. Da die Meter selbst mit(wahrscheinlich) nur mit geringen Anforderungen gebaut wurden und demtnentsprechend die Hardware nur wenig leisten kann, ist es nicht unrealistisch, dass Komponenten/Funktionen wie die Messwertlisten (für den Endnutzer) oder der Letztverbraucher Log im Meter zwischengespeichert werden. 

///////////////////////////////////////////

Punkte die Anna Biselli betrachtet hat.

